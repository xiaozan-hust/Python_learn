"""
本代码用于Python的零基础学习
"""

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#  布尔类型 if语句 if else语句 if elif else语句 while语句 for语句 range语句 break continue         ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# 布尔类型
# 比较运算符：==   !=   >   <   >=   <=
# 逻辑运算符：and  or（相当于C++中的&&  ||）
its_true = True
its_false = False
print(f"its_true的内容为：{its_true}， 类型是：{type(its_true)}")
print(f"10==10的结果是：{10==10}")

# if语句 ###############################################################################################################
#-----------------------------------------------------------------------------------------------------------------------
# if 要判断的条件:
#     条件成立时，执行的内容
#-----------------------------------------------------------------------------------------------------------------------
# python中是通过缩进判断归属的，例如上面在“条件成立时”前面有四个空格
age = input("你的年龄是：")   # 或者写为age = int(input("你的年龄是："))
if int(age) >= 18:
    print("你已经成年了！")
print("祝阁下前途似锦！")

# if else语句 ##########################################################################################################
#-----------------------------------------------------------------------------------------------------------------------
# if 要判断的条件:
#     条件成立时，执行的内容
# else:
#     条件不成立时，执行的内容
#-----------------------------------------------------------------------------------------------------------------------
age = int(input("你的年龄是："))
if age >= 22:
    print("你个老油条！")
else:
    print("加油！你还很年轻！")

# if elif else语句 #####################################################################################################
#-----------------------------------------------------------------------------------------------------------------------
# if 条件一:
#     条件一满足时执行的内容
# elif 条件二:
#     条件二满足时执行的语句
# elif 条件三:
#     条件三满足时执行的语句
# else:
#     条件都不满足时执行的语句
#-----------------------------------------------------------------------------------------------------------------------
# 条件需互斥，执行时将从上到下进行判断，一旦满足某个条件，剩下的将不再继续判断
day = int(input("今天是几号："))
if day >= 20:
    print("今天是本月下旬。")
elif day >= 10:
    print("今天是本月中旬。")
else:
    print("今天是本月上旬。")

# while循环语句 #########################################################################################################
#-----------------------------------------------------------------------------------------------------------------------
# while 条件：
#     条件满足时，执行的语句
#-----------------------------------------------------------------------------------------------------------------------
num_i = 0
sum_i = 0
while num_i < 10:
    sum_i += num_i
    print("第%d次打印, 累计为%d" %(num_i, sum_i))
    num_i += 1

target_num = 70
gauss_num = int(input("请输入你猜测的数据："))
times = 1
while gauss_num != target_num:
    if gauss_num > target_num:
        print("你猜测的数据偏大，请重新猜测：")
    else:
        print("你猜测的数据偏小，请重新猜测：")
    gauss_num = int(input())
    times += 1
print("恭喜你，猜测成功！目标数字是：%d, 你总共猜测了%d次。" %(target_num, times))

# 九九乘法表 ############################################################################################################
row_num = 1
col_num = 1
while row_num <= 9:
    while col_num <= row_num:
        print(f"{col_num}*{row_num}={col_num*row_num}\t", end='')
        col_num += 1
    row_num += 1
    col_num = 1
    print()

# for循环（遍历循环）#####################################################################################################
#-----------------------------------------------------------------------------------------------------------------------
# for 临时变量 in 待处理数据集:
#     循环满足条件时执行的代码
#-----------------------------------------------------------------------------------------------------------------------
# for循环外访问临时变量也是可以访问到的，因为实际上已经把最后一个数据传给临时变量了，但是在代码规范上不会这么使用
# 待处理数据集严格上来说应称为序列类型，如字符串，列表，元组等
names = "nadal"
num_a = 0
for s in names:
    if s == 'a':
        num_a += 1
    print(s)
print("共有%d个a" %num_a)

# range语句 ############################################################################################################
#-----------------------------------------------------------------------------------------------------------------------
# range(num)：从0开始到num结束的数字序列（不包含num本身）
# range(num1, num2)：从num1到num2的数字序列（不包含num2本身）
# range(num1, num2, step)：从num1开始，以step为步长，到num2结束的数字序列（不包含num2本身）
#-----------------------------------------------------------------------------------------------------------------------

# 九九乘法表 ############################################################################################################
for i in range(1, 10):
    for j in range(1, i + 1):
        print(f"{j}*{i}={j*i}\t", end='')
    print()

# break和continue ######################################################################################################
#-----------------------------------------------------------------------------------------------------------------------
# break：提前结束循环，不再继续
# continue：暂时跳过某次循环，直接进行下一次
# break和continue只在自己所在循环内起作用，对外层循环无效
#-----------------------------------------------------------------------------------------------------------------------

# 循环综合案例 ##########################################################################################################
import random
balance = 10000
for i in range(1, 21):
    extra = random.randint(1, 10)
    if extra < 5:
        print(f"员工{i}, 绩效分{extra}, 低于5, 不发工资，下一位")
        continue
    if balance >= 1000:
        balance -= 1000
        print(f"向员工{i}发放工资1000元，账户余额还剩余{balance}元")
    else:
        print("工资发完了，下个月领取吧。")
        break








