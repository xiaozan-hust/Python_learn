"""
本代码用于Python的零基础学习
"""
import time

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # ## # # # #  # # # # # # # # #
# 文件编码 文件读取 文件写入 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # ###
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # ## # #  # # # # # # # #

# 文件编码：将内容翻译成二进制的规则 #######################################################################################
# 最常用的文件编码是UTF-8
# 一般的，文件可以分为文本文件，视频文件，音频文件，图像文件，可执行文件等
# 对文件的操作有：打开，读，写，关闭
#-----------------------------------------------------------------------------------------------------------------------

# 文件的读取 ############################################################################################################
# open()：语法为 文件对象 = open(路径/文件名, 访问模式, encoding = "编码格式")，用于打开一个文件或者创建一个新文件
#     访问模式: r: 以只读方式打开，默认模式
#     访问模式: w: 以写入方式打开，若文件已存在，则原有内容会被删除，若文件不存在，则创建新文件
#     访问模式: a: 以追加方式打开，若文件已存在，则新内容会被追加在已有内容后，若文件不存在，则创建新文件
# read()：语法为 文件对象.read(num)，num表示读取的数据的长度，不指定num，则表示读取文件中所有数据
#     如果对同一个文件对象多次调用read，下一个read会在上一个read的结尾处接着进行读取
# readlines()：按照行的方式把整个文件的内容读取为一个列表，每行数据为列表中一个元素
# readline()：一次只读取一行内容
# close()：关闭文件对象。如果不调用该函数，并且程序没有终止，那么将一直存在对文件的占用
# with open() as xx：将在语句块中对文件进行操作，操作完成后自动关闭文件，避免遗忘掉close方法
#-----------------------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------------------
file = open("../file/test.txt", "r", encoding="UTF-8")  # 打开文件
# file_context = file.read()                              # 以read方式读取
# print(file_context, type(file_context))
# file_lines = file.readlines()                           # 以readlines方式读取
# print(file_lines, type(file_lines))
# file_line_0 = file.readline()                           # 以readline方式读取
# file_line_1 = file.readline()
# print(file_line_0, file_line_1, type(file_line_0), type(file_line_1))
# for line in file:                                       # readline配合循环读取
#     print(line)
file.close()                                            # 关闭文件对象

with open("../file/test.txt", "r", encoding="UTF-8") as file:   # 以with open方式读取
    for line in file:
        print(f"{line}")
#-----------------------------------------------------------------------------------------------------------------------

# 文件读取测试--统计文件中某个词出现的次数 ----------------------------------------------------------------------------------
# 方法一：
with open("../file/test.txt", "r", encoding="UTF-8") as file:
    file_content = file.read()
    count_tech = file_content.count("科")
    print(f"文件中“科”这一词共出现了{count_tech}次")
# 方法二(只适用于词词之间是有空格分开的情况)：
count_tech = 0
with open("../file/test.txt", "r", encoding="UTF-8") as file:
    for line in file:
        line = line.strip()
        word_list = line.split(" ")
        for word in word_list:
            if word == "科":
                count_tech += 1
print(f"文件中“科”这一词共出现了{count_tech}次")
#-----------------------------------------------------------------------------------------------------------------------

# 文件的写入 ############################################################################################################
# write()：语法为 文件对象.write(内容)，调用后将会将内容攒入电脑缓冲区
# flush()：语法为 文件对象.flush()，调用后将内容真正的写入文件
# close方法其实也内置了flush功能
#-----------------------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------------------
file = open("../file/test_write.txt", "w", encoding="UTF-8")    # 以写入方式打开文件
file.write("hello world")
file.flush()
file.close()

file = open("../file/test_write.txt", "a", encoding="UTF-8")    # 以追加方式打开文件
file.write("\nhave a nice day!")
file.flush()
file.close()
#-----------------------------------------------------------------------------------------------------------------------

# 文件操作综合案例 -------------------------------------------------------------------------------------------------------
file_orin = open("../file/test_bilibili.txt", "r", encoding="UTF-8")
file_copy = open("../file/test_bilibili.txt.bak", "w", encoding="UTF-8")
for lines in file_orin:     # 此时lines为string类型
    lines= lines.strip()
    if lines.split("，").count("测试"):
        continue
    file_copy.write(lines)
    file_copy.write("\n")
file_orin.close()
file_copy.close()
#-----------------------------------------------------------------------------------------------------------------------


